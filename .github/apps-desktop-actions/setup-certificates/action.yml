name: Setup Certificates
description: Sets up code signing certificates for macOS and Windows

runs:
  using: composite
  steps:
    - name: Setup certificates
      env:
        APPLE_CERTIFICATE: ${{ env.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE_PASSWORD: ${{ env.APPLE_CERTIFICATE_PASSWORD }}
        WINDOWS_PFX: ${{ env.WINDOWS_PFX }}
        WINDOWS_PFX_PASSWORD: ${{ env.WINDOWS_PFX_PASSWORD }}
      shell: bash
      run: |
        if [ "${{ inputs.platform }}" == "macOS" ]; then
          echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
          security create-keychain -p "$APPLE_CERTIFICATE_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$APPLE_CERTIFICATE_PASSWORD" build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$APPLE_CERTIFICATE_PASSWORD" build.keychain
        elif [ "${{ inputs.platform }}" == "Windows" ]; then
          echo "$WINDOWS_PFX" | base64 --decode > windows-certificate.pfx
        fi

    - name: Cleanup certificates
      if: always()
      shell: bash
      run: |
        if [ "${{ inputs.platform }}" == "macOS" ]; then
          security delete-keychain build.keychain
          rm -f certificate.p12
        elif [ "${{ inputs.platform }}" == "Windows" ]; then
          rm -f windows-certificate.pfx
        fi
