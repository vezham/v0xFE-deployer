      # - name: setup | vercel CLI install
      #   run: npm install --global vercel@latest
      
      # - name: Pull Vercel Environment Information
      #   run: vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}
      
      # - name: cloud | build | Build Project Artifacts
      #   run: |
      #     export NODE_OPTIONS="--max-old-space-size=7168"
      #     vercel build --prod --token=${{ env.VERCEL_TOKEN }}
      
      # - name: Deploy Project Artifacts to Vercel
      #   id: vars
      #   run: echo "url=$(vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      # - name: Test output
      #   run: echo ${{ steps.vars.outputs.url }}

      # - name: cloud | build || Build Project Artifacts
      #   run:  vercel promote ${{ steps.vars.outputs.url }} --token=${{ env.VERCEL_TOKEN }}
      #   run:  vercel promote ${{ steps.vars.outputs.url }} --token=${{ env.VERCEL_TOKEN }} --scope=${{ env.VERCEL_ORG_ID }}

      # - name: Deploy Project Artifacts to Vercel
      #   run: |
      #     url="$(vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }})"
      #     vercel alias --token=${{ env.VERCEL_TOKEN }} set "$url" your-alias.app
# *******
# - name: Install Vercel CLI
#         run: npm install --global vercel

#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

#       - name: Build Project Artifacts
#         run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}

#       - name: Deploy Project Artifacts
#         run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}


      # ------
      # - name: setup | Vercel CLI install
      #   run: pnpm install --global vercel

      # - name: Pull Vercel Environment Information
      #   run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      # - name: Build Project Artifacts
      #   run: vercel build --token=${{ env.VERCEL_TOKEN }}

      # - name: Deploy Project Artifacts
      #   run: vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}
              
              #  ------------- 
      # - name: vercel | cloud CLI
      #   uses: amondnet/vercel-action@v19
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     vercel-token: ${{ env.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ env.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
      #     working-directory: ${{ env.ENTRY_POINT }}
      #     vercel-args: '--prod'
          # alias-domains: | #Optional
          #   {USER}-{SHA}-{BRANCH}-{REPO}.rc.dev.vezham.com
          #   pr-{{PR_NUMBER}}.rc.dev.vezham.com

      # - name: vercel | cloud CLI
      #   uses: BetaHuhn/deploy-to-vercel-action@v1
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     VERCEL_TOKEN: ${{ env.VERCEL_TOKEN }}
      #     VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
      #     VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
      #     WORKING_DIRECTORY: ${{ env.ENTRY_POINT }}
      #     GITHUB_DEPLOYMENT_ENV: Production
          # PRODUCTION: true
          # GITHUB_DEPLOYMENT_ENV: Production
          # ALIAS_DOMAINS: |
          #   example.com
          #   {BRANCH}.example.com
          # PR_PREVIEW_DOMAIN: "{REPO}-{PR}.now.sh"
          # ALIAS_DOMAINS: |
          #   {BRANCH}.example.com
          #   {USER}-{SHA}-{BRANCH}-{REPO}.now.sh
          # BUILD_ENV: |
          #   FOO="bar"
          #   SOME_TOKEN="${{ secrets.SOME_TOKEN }}"